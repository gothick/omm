security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # New authenticator-based system from Symfony 5.3 onwards
    enable_authenticator_manager: true

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # Making the API firewall stateless allows API-platform to cache wander geoJSON
        # responses even if I'm logged in. I can always refresh my cache manually if I
        # need to, given that I'm the only actual User...
        api:
            pattern: ^/api
            stateless: true
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: login
                check_path: login
                default_target_path: admin_index
            logout:
                path:   app_logout
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # TODO: Simplify this now we've moved all of our admin interface under /admin
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
        - { path: ^/user, roles: ROLE_USER, requires_channel: https }
        # Just a courtesy for the dev environment, really, to save myself having to
        # remember that Symfony login cookies don't play nicely with http, but that
        # Homestead out of the box doesn't redirect to https. It's easier to do it
        # here than changing the Homestead conf. All our other environments force
        # https at the server level anyway.
        - { path: ^/, requires_channel: https }
        # - { path: ^/profile, roles: ROLE_USER }
